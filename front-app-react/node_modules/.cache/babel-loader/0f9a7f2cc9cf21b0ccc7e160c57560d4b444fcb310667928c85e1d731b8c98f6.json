{"ast":null,"code":"var _jsxFileName = \"/Users/kevin.begot/Programmation/github/react/front-app-react/src/components/Meal.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    document.title = `Vous avez cliqué ${count} fois`;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Vous avez cliqu\\xE9 \", count, \" fois\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Cliquez ici\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Example, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = Example;\nconst initialState = {\n  count: 0\n};\nfunction Counter() {\n  _s2();\n  const [state, dispatch] = useReducer(reducer, initialState);\n}\n_s2(Counter, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c2 = Counter;\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'increment':\n      return {\n        count: state.count + 1\n      };\n    case 'decrement':\n      return {\n        count: state.count - 1\n      };\n    default:\n      throw new Error();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Total : \", state.count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'decrement'\n      }),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'increment'\n      }),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this);\n}\nexport default Example;\nvar _c, _c2;\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"Counter\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Example","count","setCount","document","title","initialState","Counter","state","dispatch","reducer","action","type","Error"],"sources":["/Users/kevin.begot/Programmation/github/react/front-app-react/src/components/Meal.tsx"],"sourcesContent":["import { count } from 'console';\nimport React, { useState, useEffect, useReducer} from 'react';\n\nconst Example: React.FC = () => {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `Vous avez cliqué ${count} fois`;\n  });\n\n  return (\n    <div>\n      <p>Vous avez cliqué {count} fois</p>\n      <button onClick={() => setCount(count + 1)}>\n        Cliquez ici\n      </button>\n    </div>\n  );\n}\n    const initialState = {count: 0};\n\n    function Counter() {\n        const [state, dispatch] = useReducer(reducer, initialState);\n    }\n    function reducer(state, action) {\n        switch (action.type) {\n          case 'increment':\n            return {count: state.count + 1};\n          case 'decrement':\n            return {count: state.count - 1};\n          default:\n            throw new Error();\n        }\n        return (\n            <div>\n               Total : {state.count}\n            <button onClick={() => dispatch({type: 'decrement'})}>-</button>\n            <button onClick={() => dispatch({type: 'increment'})}>+</button>\n            </div>\n          )\n    }\n  \n    \n\nexport default Example\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAO,OAAO;AAAC;AAE9D,MAAMC,OAAiB,GAAG,MAAM;EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACdK,QAAQ,CAACC,KAAK,GAAI,oBAAmBH,KAAM,OAAM;EACnD,CAAC,CAAC;EAEF,oBACE;IAAA,wBACE;MAAA,WAAG,sBAAiB,EAACA,KAAK,EAAC,OAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI,eACpC;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAA,UAAC;IAE5C;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAA,GAfKD,OAAiB;AAAA,KAAjBA,OAAiB;AAgBnB,MAAMK,YAAY,GAAG;EAACJ,KAAK,EAAE;AAAC,CAAC;AAE/B,SAASK,OAAO,GAAG;EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,UAAU,CAACU,OAAO,EAAEJ,YAAY,CAAC;AAC/D;AAAC,IAFQC,OAAO;AAAA,MAAPA,OAAO;AAGhB,SAASG,OAAO,CAACF,KAAK,EAAEG,MAAM,EAAE;EAC5B,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAACV,KAAK,EAAEM,KAAK,CAACN,KAAK,GAAG;MAAC,CAAC;IACjC,KAAK,WAAW;MACd,OAAO;QAACA,KAAK,EAAEM,KAAK,CAACN,KAAK,GAAG;MAAC,CAAC;IACjC;MACE,MAAM,IAAIW,KAAK,EAAE;EAAC;EAEtB,oBACI;IAAA,WAAK,UACM,EAACL,KAAK,CAACN,KAAK,eACvB;MAAQ,OAAO,EAAE,MAAMO,QAAQ,CAAC;QAACG,IAAI,EAAE;MAAW,CAAC,CAAE;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS,eAChE;MAAQ,OAAO,EAAE,MAAMH,QAAQ,CAAC;QAACG,IAAI,EAAE;MAAW,CAAC,CAAE;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1D;AAEd;AAIJ,eAAeX,OAAO;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}