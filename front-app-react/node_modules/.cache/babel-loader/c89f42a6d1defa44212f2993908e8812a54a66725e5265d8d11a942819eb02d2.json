{"ast":null,"code":"var _jsxFileName = \"/Users/kevin.begot/Programmation/github/react/front-app-react/src/components/Meal.tsx\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Meal() {\n  var _s = $RefreshSig$();\n  const Example = () => {\n    _s();\n    const [count, setCount] = useState(0);\n    useEffect(() => {\n      document.title = `Vous avez cliqué ${count} fois`;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Vous avez cliqu\\xE9 \", count, \" fois\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \"Cliquez ici\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this);\n  };\n  _s(Example, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n  const initialState = {\n    count: 0\n  };\n  function reducer(state, action) {\n    var _s2 = $RefreshSig$();\n    switch (action.type) {\n      case 'increment':\n        return {\n          count: state.count + 1\n        };\n      case 'decrement':\n        return {\n          count: state.count - 1\n        };\n      default:\n        throw new Error();\n    }\n    function Counter() {\n      _s2();\n      const [state, dispatch] = useReducer(reducer, initialState);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Total : \", state.count, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch({\n            type: 'decrement'\n          }),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch({\n            type: 'increment'\n          }),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    }\n    _s2(Counter, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n  }\n  return {\n    reducer\n  };\n}\n_c = Meal;\nvar _c;\n$RefreshReg$(_c, \"Meal\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Meal","Example","count","setCount","document","title","initialState","reducer","state","action","type","Error","Counter","dispatch"],"sources":["/Users/kevin.begot/Programmation/github/react/front-app-react/src/components/Meal.tsx"],"sourcesContent":["import { count } from 'console';\nimport React, { useState, useEffect, useReducer} from 'react';\n\nexport default function Meal() {\n\n\nconst Example: React.FC = () => {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `Vous avez cliqué ${count} fois`;\n  });\n\n  return (\n    <div>\n      <p>Vous avez cliqué {count} fois</p>\n      <button onClick={() => setCount(count + 1)}>\n        Cliquez ici\n      </button>\n    </div>\n  );\n}\n\nconst initialState = {count: 0};\n\nfunction reducer(state: any, action: any) {\n  switch (action.type) {\n    case 'increment':\n      return {count: state.count + 1};\n    case 'decrement':\n      return {count: state.count - 1};\n    default:\n      throw new Error();\n  }\n  function Counter() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n      <>\n        Total : {state.count}\n        <button onClick={() => dispatch({type: 'decrement'})}>-</button>\n        <button onClick={() => dispatch({type: 'increment'})}>+</button>\n      </>\n    );\n  }\n}\nreturn ({reducer})\n\n}\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAO,OAAO;AAAC;AAAA;AAE9D,eAAe,SAASC,IAAI,GAAG;EAAA;EAG/B,MAAMC,OAAiB,GAAG,MAAM;IAAA;IAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;IAErCC,SAAS,CAAC,MAAM;MACdM,QAAQ,CAACC,KAAK,GAAI,oBAAmBH,KAAM,OAAM;IACnD,CAAC,CAAC;IAEF,oBACE;MAAA,wBACE;QAAA,WAAG,sBAAiB,EAACA,KAAK,EAAC,OAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,eACpC;QAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;QAAA,UAAC;MAE5C;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAEV,CAAC;EAAA,GAfKD,OAAiB;EAiBvB,MAAMK,YAAY,GAAG;IAACJ,KAAK,EAAE;EAAC,CAAC;EAE/B,SAASK,OAAO,CAACC,KAAU,EAAEC,MAAW,EAAE;IAAA;IACxC,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAK,WAAW;QACd,OAAO;UAACR,KAAK,EAAEM,KAAK,CAACN,KAAK,GAAG;QAAC,CAAC;MACjC,KAAK,WAAW;QACd,OAAO;UAACA,KAAK,EAAEM,KAAK,CAACN,KAAK,GAAG;QAAC,CAAC;MACjC;QACE,MAAM,IAAIS,KAAK,EAAE;IAAC;IAEtB,SAASC,OAAO,GAAG;MAAA;MACjB,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGd,UAAU,CAACQ,OAAO,EAAED,YAAY,CAAC;MAC3D,oBACE;QAAA,WAAE,UACQ,EAACE,KAAK,CAACN,KAAK,eACpB;UAAQ,OAAO,EAAE,MAAMW,QAAQ,CAAC;YAACH,IAAI,EAAE;UAAW,CAAC,CAAE;UAAA,UAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAS,eAChE;UAAQ,OAAO,EAAE,MAAMG,QAAQ,CAAC;YAACH,IAAI,EAAE;UAAW,CAAC,CAAE;UAAA,UAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,gBAC/D;IAEP;IAAC,IATQE,OAAO;EAUlB;EACA,OAAQ;IAACL;EAAO,CAAC;AAEjB;AAAC,KA5CuBP,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}